{"version":3,"file":"7.e36df05cad28e580e420.hot-update.js","sources":["webpack:///pages/spotifyclone.js"],"sourcesContent":["import {\n    Button,\n    Container,\n    Image, \n    Dimmer,\n    Segment,\n    Grid,\n    Icon\n} from 'semantic-ui-react'; \nimport React from 'react'\nimport Link from 'next/link'\n class SpotifyClone extends React.Component {\n     state = {\n         activeImage:'', \n         dimmerActive: false\n     }\n    \n   \n    handleShow = (e) => {\n        console.log(e.target.name)\n        this.setState({ dimmerActive: true, activeImage: e.target.name })\n     }\n    handleHide = () => {\n        console.log('should hide')\n        this.setState({ dimmerActive: false })\n    }\n    \n    render(){\n        return(\n            <div>\n\n                <Dimmer page active={this.state.dimmerActive} onClick={this.handleHide}>\n                    <Container>\n                        <Image src={this.state.activeImage}  verticalAlign=\"top\" size=\"massive\"/>\n                    </Container>\n                </Dimmer>\n                <Container>\n                    <Segment basic>\n                    <h1>Spotify Clone</h1><br />\n                    <p>\n                        Spotify provides its premium users (who happen to be developers) with access to their entire library of music as well as \n                        some interesting functionality. I thought it would be an interesting exercise to try to and implement as many of the endpoints as I could\n                        from Spotify's API in a week. \n                    </p> \n                    <h2>\n                        Technology: \n                        <ul>\n                            <li>React.js</li>\n                            <li>Node.js</li>\n                            <li>Spotify API</li>\n                            <li>Semantic React UI</li>\n\n                        </ul>\n                        <a href=\"https://github.com/gregDrizagit/SpotifyCloneFE\">\n                            <Icon link size=\"huge\" name='github' />\n                        </a>\n                        See the code for this project\n                    </h2>                      \n                    </Segment>\n                    <Grid>\n                        <Grid.Row>\n                        <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-1.gif\" onClick={this.handleShow} src={'/static/spotify-gif-1.gif'} size=\"huge\" />\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                        <p>\n                            Users can connect to their Spotify account. On the home page they will see Spotify's collection of \n                            of featured music as well as a list of the most recent songs they've played on Spotify. \n                        </p>\n                        </Grid.Column>\n                        </Grid.Row>\n\n                        <Grid.Row>\n                        <Grid.Column width={8}>\n                        <p>\n                            Users can also explore Spotify's collection of themed playlists. \n                        </p>  \n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-2.gif\" onClick={this.handleShow} src={'/static/spotify-gif-2.gif'} size=\"huge\" />\n                        </Grid.Column>\n                        </Grid.Row>\n\n                         <Grid.Row>\n                         <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-3.gif\" onClick={this.handleShow} src={'/static/spotify-gif-3.gif'} size=\"huge\" />\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                        <p>\n                            Users can look through pages of all 50,000+ of the books in the database or browse by \n                            category (subject, author, bookshelf). User's can view all the books in a given \n                            category and flip through books or add books to a collection.\n                        </p>\n                        </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                         <Grid.Column width={8}>\n                         <p>\n                            Users can quickly search all categories, books, authors, and subjects at the same time with a quick keyword search.\n                             Search results can be filtered by Author, Subject, Bookshelf, and Book. \n                        </p>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-4.gif\" onClick={this.handleShow} src={'/static/spotify-gif-4.gif'} size=\"huge\" />\n                        </Grid.Column>\n                        </Grid.Row>\n\n                        <Grid.Row>\n                         <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-5.gif\" onClick={this.handleShow} src={'/static/spotify-gif-5.gif'} size=\"huge\" />\n\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                        <p>\n                            When the user selects a book, the book is returned from Gutendex in a massive HTML document. This is convenient for a number of reasons. \n                            Since Project Gutenberg is largely a voluneer effort, every book is formatted a little differently. \n                            We can use some simple Javascript to create consistent format across all books as well as provide the user with some controls to enhance the reading experience. \n                        </p>\n                        </Grid.Column>\n                        </Grid.Row>\n\n                        <Grid.Row>\n                         <Grid.Column width={8}>\n                         <p>\n                            Inside the collapsable control panel are controls for site navigation, and text size adjustment. \n                         </p>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Image name=\"/static/spotify-gif-6.gif\" onClick={this.handleShow} src={'/static/spotify-gif-6.gif'} size=\"huge\" />\n                        </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <Segment basic>\n                    \n                    <br />\n                    <p>\n                        <Link href=\"/work\">\n                            <a>See my other projects </a>\n                        </Link>\n                    </p>\n\n                    </Segment>\n                </Container>\n                <style jsx>\n                {\n                    `\n                        p, h1, h2{\n                            font-size: larger;\n                            font-family:\"Lucida Console\", Monaco, monospace;\n                        }\n                    `\n                }\n                </style>\n            </div>\n        )\n    }\n}\n\nexport default SpotifyClone\n\n\n// WEBPACK FOOTER //\n// pages/spotifyclone.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AASA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5GA;AAAA;AAAA;AA8HA;;;;AAhJA;AACA;AAkJA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}